# workflow:
#   rules:
#     - if: "$CI_COMMIT_BRANCH"
#       when: always
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    
variables:
  PKG_VER: "v1.1"
services:
  - docker:20.10.16-dind

stages:
  #- compile
  #- test
  - package
  - build-docker-image

# compile-job:
#   image: maven:3-openjdk-8
#   stage: compile
#   script:
#     - mvn compile

# codereview-job:
#   image: maven:3-openjdk-8
#   stage: test
#   script:
#     - mvn -P metrics pmd:pmd

# unittest-job:
#   image: maven:3-openjdk-8
#   stage: test
#   script:
#     - mvn test

package-job:
  image: maven:3-openjdk-8
  stage: package
  script:
    - mvn package
    #- 'curl --header "PRIVATE-TOKEN: $TOKEN" --upload-file /builds/lerndevops/javaapp/target/sampleapp.war https://gitlab.com/api/v4/projects/35689779/packages/generic/sampleapp/1.0/sampleapp.war'
    - 'curl --header "PRIVATE-TOKEN: $TOKEN" --upload-file /builds/lerndevops/javaapp/target/sampleapp.war "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/sampleapp/${CI_COMMIT_SHORT_SHA}/sampleapp.war"'

build-docker-image:
  stage: build-docker-image
  image: docker:20.10.16
  script:
      - 'wget --header="PRIVATE-TOKEN: $TOKEN" ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/sampleapp/${CI_COMMIT_SHORT_SHA}/sampleapp.war -P /builds'
      #- docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
      #- docker build --file Dockerfile --tag lerndevops/samplejavaapp:$PKG_VER /builds
      #- docker push lerndevops/samplejavaapp:$PKG_VER
      - echo "push image to gitlab registry"
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
      - docker build --file Dockerfile --tag registry.gitlab.com/lerndevops/sampleapp:${CI_COMMIT_SHORT_SHA} /builds
      - docker push registry.gitlab.com/lerndevops/sampleapp:${CI_COMMIT_SHORT_SHA}